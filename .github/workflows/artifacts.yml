on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [ created ]


name: Build artifacts

jobs:
  upload-release:
    if: ${{ github.event_name == 'release' }}
    name: Upload nginx configuration artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Generate artifacts
        run: |
          bash generate_artifact.sh
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@74c3d60f5a28f358ccf241a00c9021ea16f0569f
        env:
          GITHUB_TOKEN: ${{ github.token }}
        if: ${{ github.event_name == 'release' }}
      - name: Upload Full Node Release Asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./babylon-nginx-fullnode-conf.zip
          asset_name: babylon-nginx-fullnode-conf.zip
          asset_content_type: application/zip
  
  build-push-container-gcr:
    if: github.event_name == 'pull_request'
    name: GCR
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@DO-1215
    with:
      runs-on: ubuntu-20.04
      # image information
      image_registry: "eu.gcr.io"
      image_organization: "dev-container-repo"
      image_name: "babylon-nginx"
      tag: ${{ github.head_ref }}
      # build information
      restore_artifact: "false"
      context: "."
      dockerfile: "./Dockerfile.alpine"
      platforms: "linux/amd64"
      # optimizations
      cache_tag_suffix: "pr"
      enable_trivy: "true"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  
  build-push-container-docker:
    name: Dockerhub
    if: github.event_name == 'release'
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@DO-1215
    with:
      runs-on: ubuntu-20.04
      environment: release
      # image information
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "babylon-nginx"
      tag: ${{ github.event.release.tag_name }}
      # build information
      restore_artifact: "false"
      context: "."
      dockerfile: "./Dockerfile.alpine"
      platforms: "linux/amd64"
      # optimizations
      cache_tag_suffix: "release"
      enable_dockerhub: "true"
      enable_trivy: "true"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      role_to_assume: ${{ secrets.DOCKERHUB_RELEASER_ROLE }}