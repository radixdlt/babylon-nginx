on:
  push:
    branches:
      - master
    tags:
      - test-artifacts*
  release:
    types: [ published ]
  repository_dispatch:
    types: [ rc_tag ]


name: Build artifacts

jobs:
  build:
    name: Upload nginx configuration artifacts
    runs-on: ubuntu-latest
    environment: AWS_ARTIFACT
    if:  "${{ github.event.action != 'rc_tag' }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate artifacts
        run: |
          bash generate_artifact.sh
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        if: ${{ github.event_name == 'release' }}
      - name: Upload Archive Node Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./radixdlt-nginx-archive-conf.zip
          asset_name: radixdlt-nginx-archive-conf.zip
          asset_content_type: application/zip
        if: ${{ github.event_name == 'release' }}
      - name: Upload Full Node Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./radixdlt-nginx-fullnode-conf.zip
          asset_name: radixdlt-nginx-fullnode-conf.zip
          asset_content_type: application/zip
        if: ${{ github.event_name == 'release' }}


      - name: set branchname with commit
        run: |
            BRANCH_NAME_WITH_HYPENS=$(echo ${GITHUB_REF##*/} | sed 's/\//-/g')
            COMMIT=$(git log -1 --format=%h )
            BRANCH_WITH_COMMIT=$BRANCH_NAME_WITH_HYPENS-$COMMIT
            echo "BRANCH_WITH_COMMIT=$BRANCH_WITH_COMMIT" >> $GITHUB_ENV
        if: ${{ github.event_name == 'push' }}
      - name: Configure AWS Region
        run: echo "AWS_DEFAULT_REGION=eu-west-1" >> $GITHUB_ENV
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Upload Archive and full  Node zip file to aws
        run: |
          aws s3 cp radixdlt-nginx-archive-conf.zip s3://${{secrets.ARTIFACT_AWS_BUCKET }}/nginx/${{env.BRANCH_WITH_COMMIT}}/radixdlt-nginx-archive-conf.zip
          aws s3 cp radixdlt-nginx-fullnode-conf.zip s3://${{secrets.ARTIFACT_AWS_BUCKET }}/nginx/${{env.BRANCH_WITH_COMMIT}}/radixdlt-nginx-fullnode-conf.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACT_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACT_AWS_SECRET_ACCESS_KEY}}
        if: ${{ github.event_name == 'push' }}


  docker:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    environment: publish-dockerhub
    steps:
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set Environment Variables
        run: |
          GH_EVENT_NAME="${{ github.event_name }}"
          BRANCH_REF="${{github.ref}}"
          GIT_HUB_RELEASE_TAG=${{ github.event.release.tag_name }}
          GIT_HUB_ACTION=${{ github.event.action}}
          set_image_version(){
              # $1 github event name , $2 branch ref value, $3 github release tag

                if [[ ! -z $1 ]] && [[ "$1" == "release" ]];then
                  echo "Workflow triggered by a release event"
                  NGINX_IMG_VERSION="$3"
                elif [[ ! -z $1  ]] && [[ "$1" == "push" ]];then
                    echo "push event"
                    BRANCH_NAME_WITH_HYPENS=$(echo ${GITHUB_REF##*/} | sed 's/\//-/g')
                    COMMIT=$(git log -1 --format=%h )
                    NGINX_IMG_VERSION=$BRANCH_NAME_WITH_HYPENS-$COMMIT
                elif [[ ! -z $1 ]] && [[ "$1" == "repository_dispatch" ]];then
                  if [[ ! -z $GIT_HUB_ACTION ]] && [[ $GIT_HUB_ACTION == "rc_tag" ]];then
                     release_branch_ref=${{ github.event.client_payload.ref }}
                     release_version=${release_branch_ref/refs\/heads\/release\//}
                     echo "Release version: $release_version"
                     rc_tag="$release_version-rc.1"
                     NGINX_IMG_VERSION=$rc_tag
                  fi
                fi
                if [[ "$BRANCH_NAME_WITH_HYPENS" == "master" ]];then
                  NGINX_IMG_TAGS="radixdlt/radixdlt-nginx:$NGINX_IMG_VERSION,radixdlt/radixdlt-nginx:development-latest"
                else
                  NGINX_IMG_TAGS=radixdlt/radixdlt-nginx:$NGINX_IMG_VERSION
                fi
              }

          set_image_version $GH_EVENT_NAME $BRANCH_REF $GIT_HUB_RELEASE_TAG
          echo "Image tag: $NGINX_IMG_TAGS"
          echo "NGINX_IMG_TAGS=$NGINX_IMG_TAGS" >> $GITHUB_ENV
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.alpine
          push: true
          tags: ${{ env.NGINX_IMG_TAGS }}